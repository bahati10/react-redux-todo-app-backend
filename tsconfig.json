{
    "compilerOptions": {
  
      /* Language and Environment */
      "target": "ESNext" /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */,                           /* Specify what JSX code is generated. */
      "experimentalDecorators": true /* Enable experimental support for legacy experimental decorators. */,
      "emitDecoratorMetadata": true /* Emit design-type metadata for decorated declarations in source files. */,
      /* Modules */
      "module": "ESNext" /* Specify what module code is generated. */,                              /* Specify the root folder within your source files. */
      "moduleResolution": "node" /* Specify how TypeScript looks up a file from a given module specifier. */,
      "baseUrl": "./src" /* Specify the base directory to resolve non-relative module names. */,                        /* Conditions to set in addition to the resolver-specific defaults when resolving imports. */
      "resolveJsonModule": true /* Enable importing .json files. */,                              /* Specify a file that bundles all outputs into one JavaScript file. If 'declaration' is true, also designates a file that bundles all .d.ts output. */
      "outDir": "./dist" /* Specify an output folder for all emitted files. */,
      "esModuleInterop": true /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility. */,                    /* Disable resolving symlinks to their realpath. This correlates to the same flag in node. */
      "forceConsistentCasingInFileNames": true /* Ensure that casing is correct in imports. */,
      "strict": true,
      "skipLibCheck": true
    },
    "include": ["src//*"],
    "exclude": ["node_modules"],
    // "files": ["./src/utilis/swagger.ts"]
  }
  